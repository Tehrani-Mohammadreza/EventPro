@page "/events"
@inject EventService EventService
@inject NavigationManager NavigationManager

<h3 class="header">Events</h3>

<ul class="event-list">
    @foreach (var ev in events)
    {
        <li class="event-item">
            <span>@ev.Name - @ev.Date.ToString("MMMM dd, yyyy")</span>
            <div>
                <button @onclick="() => EditEvent(ev.Id)">Edit</button>
                <button @onclick="() => DeleteEvent(ev.Id)">Delete</button>
            </div>
        </li>
    }
</ul>

<button class="create-button" @onclick="CreateNewEvent">Create New Event</button>

@code {
    private List<Event> events = new List<Event>();

    protected override async Task OnInitializedAsync()
    {
        events = await EventService.GetEventsAsync();
    }

    private void CreateNewEvent()
    {
        // Redirect to the Create Event page
        NavigationManager.NavigateTo("/create-event");
    }

    private void EditEvent(int id)
    {
        // Redirect to the Edit Event page with the event id
        NavigationManager.NavigateTo($"/edit-event/{id}");
    }

    private async Task DeleteEvent(int id)
    {
        try
        {
            await EventService.DeleteEventAsync(id);
            events = await EventService.GetEventsAsync();
        }
        catch (Exception ex)
        {
            // Handle the error (e.g., show a message to the user)
            Console.WriteLine($"Error deleting event: {ex.Message}");
        }
    }
}

